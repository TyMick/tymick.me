// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CashRegister matches snapshot 1`] = `
<div
  className="container"
>
  <h1
    className="mb-4"
  >
    Cash register function
  </h1>
  <form
    className="mb-4"
    onSubmit={[Function]}
  >
    <div
      className="form-row"
    >
      <div
        className="col-sm form-group"
      >
        <label
          className="lead form-label"
          htmlFor="price"
        >
          Purchase price (
          <code>
            price
          </code>
          )
        </label>
        <div
          className="input-group"
        >
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
              id="dsPrice"
            >
              $
            </span>
          </div>
          <input
            aria-describedby="dsPrice"
            className="form-control"
            id="price"
            min="0"
            onChange={[Function]}
            required={true}
            step="0.01"
            type="number"
            value={0}
          />
        </div>
      </div>
      <div
        className="col-sm form-group"
      >
        <label
          className="lead form-label"
          htmlFor="cash"
        >
          Payment amount (
          <code>
            cash
          </code>
          )
        </label>
        <div
          className="input-group"
        >
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
              id="dsCash"
            >
              $
            </span>
          </div>
          <input
            aria-describedby="dsCash"
            className="form-control"
            id="cash"
            min="0"
            onChange={[Function]}
            required={true}
            step="0.01"
            type="number"
            value={0}
          />
        </div>
      </div>
    </div>
    <div
      className="form-row"
    >
      <div
        className="col lead"
        id="cid"
      >
        Cash in drawer (
        <code>
          cid
        </code>
        )
      </div>
    </div>
    <div
      className="form-row"
    >
      <div
        className="col-sm-6 col-md-4 col-lg-3 form-group"
      >
        <label
          className="form-label"
          htmlFor="penny"
        >
          Value in pennies
        </label>
        <div
          className="input-group"
        >
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
              id="dsPenny"
            >
              $
            </span>
          </div>
          <input
            aria-describedby="dsPenny"
            aria-labelledby="cid"
            className="form-control"
            id="penny"
            min="0"
            onChange={[Function]}
            required={true}
            step="0.01"
            type="number"
            value={0}
          />
        </div>
      </div>
      <div
        className="col-sm-6 col-md-4 col-lg-3 form-group"
      >
        <label
          className="form-label"
          htmlFor="nickel"
        >
          Value in nickels
        </label>
        <div
          className="input-group"
        >
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
              id="dsNickel"
            >
              $
            </span>
          </div>
          <input
            aria-describedby="dsNickel"
            aria-labelledby="cid"
            className="form-control"
            id="nickel"
            min="0"
            onChange={[Function]}
            required={true}
            step="0.05"
            type="number"
            value={0}
          />
        </div>
      </div>
      <div
        className="col-sm-6 col-md-4 col-lg-3 form-group"
      >
        <label
          className="form-label"
          htmlFor="dime"
        >
          Value in dimes
        </label>
        <div
          className="input-group"
        >
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
              id="dsDime"
            >
              $
            </span>
          </div>
          <input
            aria-describedby="dsDime"
            aria-labelledby="cid"
            className="form-control"
            id="dime"
            min="0"
            onChange={[Function]}
            required={true}
            step="0.1"
            type="number"
            value={0}
          />
        </div>
      </div>
      <div
        className="col-sm-6 col-md-4 col-lg-3 form-group"
      >
        <label
          className="form-label"
          htmlFor="quarter"
        >
          Value in quarters
        </label>
        <div
          className="input-group"
        >
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
              id="dsQuarter"
            >
              $
            </span>
          </div>
          <input
            aria-describedby="dsQuarter"
            aria-labelledby="cid"
            className="form-control"
            id="quarter"
            min="0"
            onChange={[Function]}
            required={true}
            step="0.25"
            type="number"
            value={0}
          />
        </div>
      </div>
      <div
        className="col-sm-6 col-md-4 col-lg-3 form-group"
      >
        <label
          className="form-label"
          htmlFor="dollar"
        >
          Value in one-dollar bills
        </label>
        <div
          className="input-group"
        >
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
              id="dsDollar"
            >
              $
            </span>
          </div>
          <input
            aria-describedby="dsDollar"
            aria-labelledby="cid"
            className="form-control"
            id="dollar"
            min="0"
            onChange={[Function]}
            required={true}
            step="1"
            type="number"
            value={0}
          />
        </div>
      </div>
      <div
        className="col-sm-6 col-md-4 col-lg-3 form-group"
      >
        <label
          className="form-label"
          htmlFor="five"
        >
          Value in five-dollar bills
        </label>
        <div
          className="input-group"
        >
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
              id="dsFive"
            >
              $
            </span>
          </div>
          <input
            aria-describedby="dsFive"
            aria-labelledby="cid"
            className="form-control"
            id="five"
            min="0"
            onChange={[Function]}
            required={true}
            step="5"
            type="number"
            value={0}
          />
        </div>
      </div>
      <div
        className="col-sm-6 col-md-4 col-lg-3 form-group"
      >
        <label
          className="form-label"
          htmlFor="ten"
        >
          Value in ten-dollar bills
        </label>
        <div
          className="input-group"
        >
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
              id="dsTen"
            >
              $
            </span>
          </div>
          <input
            aria-describedby="dsTen"
            aria-labelledby="cid"
            className="form-control"
            id="ten"
            min="0"
            onChange={[Function]}
            required={true}
            step="10"
            type="number"
            value={0}
          />
        </div>
      </div>
      <div
        className="col-sm-6 col-md-4 col-lg-3 form-group"
      >
        <label
          className="form-label"
          htmlFor="twenty"
        >
          Value in twenty-dollar bills
        </label>
        <div
          className="input-group"
        >
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
              id="dsTwenty"
            >
              $
            </span>
          </div>
          <input
            aria-describedby="dsTwenty"
            aria-labelledby="cid"
            className="form-control"
            id="twenty"
            min="0"
            onChange={[Function]}
            required={true}
            step="20"
            type="number"
            value={0}
          />
        </div>
      </div>
      <div
        className="col-sm-6 col-md-4 col-lg-3 form-group"
      >
        <label
          className="form-label"
          htmlFor="hundred"
        >
          Value in hundred-dollar bills
        </label>
        <div
          className="input-group"
        >
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
              id="dsHundred"
            >
              $
            </span>
          </div>
          <input
            aria-describedby="dsHundred"
            aria-labelledby="cid"
            className="form-control"
            id="hundred"
            min="0"
            onChange={[Function]}
            required={true}
            step="100"
            type="number"
            value={0}
          />
        </div>
      </div>
    </div>
    <button
      className="btn btn-primary"
      disabled={false}
      type="submit"
    >
      Check the cash register
    </button>
  </form>
  <div
    className="mx-2 mx-sm-4 mx-lg-5 mb-4"
  >
    <div
      className="d-flex align-items-center mb-3"
    >
      <h5
        className="mb-0 mr-3"
      >
        Function call:
      </h5>
      <div
        className="mb-0 card"
      >
        <pre
          className="px-2 py-1 m-0"
        >
           
        </pre>
      </div>
    </div>
    <div
      className="d-flex align-items-center"
    >
      <h5
        className="mb-0 mr-3"
      >
        Returns:
      </h5>
      <div
        className="mb-0 card"
      >
        <pre
          className="px-2 py-1 m-0"
        >
           
        </pre>
      </div>
    </div>
  </div>
  <div
    className="mb-2"
  />
  <p>
    I created this function as a requirement for
     
    <a
      href="https://www.freecodecamp.org/certification/tymick/javascript-algorithms-and-data-structures"
    >
      my freeCodeCamp JavaScript Algorithms and Data Structures Certification
    </a>
    . Output isn’t terribly human-readable, but, well, human-readable wasn’t part of the requirements. I suppose cash registers don’t really speak English, though, so I guess that’s okay. Here are the requirements I built to:
  </p>
  <ul>
    <li>
      Design a cash register drawer function
       
      <code>
        checkCashRegister()
      </code>
       that accepts purchase price as the first argument (
      <code>
        price
      </code>
      ), payment as the second argument (
      <code>
        cash
      </code>
      ), and cash-in-drawer (
      <code>
        cid
      </code>
      ) as the third argument.
    </li>
    <li>
      <code>
        cid
      </code>
       is a 2D array listing available currency.
    </li>
    <li>
      The 
      <code>
        checkCashRegister()
      </code>
       function should always return an object with a 
      <code>
        status
      </code>
       key and a 
      <code>
        change
      </code>
       
      key.
    </li>
    <li>
      Return
       
      <code>
        {status: "INSUFFICIENT_FUNDS", change: []}
      </code>
       
      if cash-in-drawer is less than the change due, or if you cannot return the exact change.
    </li>
    <li>
      Return
       
      <code>
        {status: "CLOSED", change: [...]}
      </code>
       
      with cash-in-drawer as the value for the key 
      <code>
        change
      </code>
       if it is equal to the change due.
    </li>
    <li>
      Otherwise, return
       
      <code>
        {status: "OPEN", change: [...]}
      </code>
      , with the change due in coins and bills, sorted in highest to lowest order, as the value of the 
      <code>
        change
      </code>
       key.
    </li>
  </ul>
</div>
`;
