{"version":3,"file":"static/webpack/static/development/pages/project/cash-register.js.f43a66e112110a1d4fef.hot-update.js","sources":["webpack:///./pages/project/cash-register.jsx"],"sourcesContent":["\"use strict\";\n\nimport React from \"react\";\nimport Head from \"next/head\";\nimport Gist from \"react-gist\";\nimport { Container, Form, Col } from \"react-bootstrap\";\n\nexport default () => {\n  function checkCashRegister(price, cash, cid) {\n    let changeLeft = cash - price;\n    let drawerTotal = cid.reduce(function(acc, cur) {\n      return acc + cur[1];\n    }, 0);\n\n    if (changeLeft == drawerTotal) {\n      return { status: \"CLOSED\", change: cid };\n    } else {\n      let changeUnits = [];\n\n      function processUnit(name, amt) {\n        let unitTotal = cid.filter(item => item[0] == name)[0][1];\n        let unitChange = Math.min(\n          unitTotal,\n          Math.floor(changeLeft / amt) * amt\n        );\n        unitChange = Math.round(unitChange * 100) / 100;\n        if (unitChange > 0) {\n          changeUnits.push([name, unitChange]);\n          changeLeft -= unitChange;\n          changeLeft = Math.round(changeLeft * 100) / 100; //fixes flooring issues\n        }\n      }\n      processUnit(\"ONE HUNDRED\", 100);\n      processUnit(\"TWENTY\", 20);\n      processUnit(\"TEN\", 10);\n      processUnit(\"FIVE\", 5);\n      processUnit(\"ONE\", 1);\n      processUnit(\"QUARTER\", 0.25);\n      processUnit(\"DIME\", 0.1);\n      processUnit(\"NICKEL\", 0.05);\n      processUnit(\"PENNY\", 0.01);\n\n      if (changeLeft == 0) {\n        return { status: \"OPEN\", change: changeUnits };\n      } else {\n        return { status: \"INSUFFICIENT_FUNDS\", change: [] };\n      }\n    }\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Cash register â€“ Ty Mick</title>\n      </Head>\n\n      <Container>\n        <h1 className=\"mb-4\">Cash register function</h1>\n\n        <Form>\n          <Form.Row>\n            <Form.Group controlId=\"price\" className=\"col-sm\">\n              <Form.Label className=\"lead\">Purchase price (<code>price</code>)</Form.Label>\n              <Form.Control type=\"number\" step=\"0.01\" min=\"0\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"cash\" className=\"col-sm\">\n              <Form.Label className=\"lead\">Payment amount (<code>cash</code>)</Form.Label>\n              <Form.Control type=\"number\" step=\"0.01\" min=\"0\" />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row><div className=\"col lead\">Cash in drawer (<code>cid</code>)</div></Form.Row>\n        </Form>\n\n        <div className=\"mb-2\">\n          <Gist id=\"24cdeb02eb5f4e3e2cd14f91f5bbe5cb\" />\n        </div>\n\n        {/* Explanation */}\n        <p>\n          I created this function as a requirement for{\" \"}\n          <a href=\"https://www.freecodecamp.org/certification/tywmick/javascript-algorithms-and-data-structures\">\n            my freeCodeCamp JavaScript Algorithms and Data Structures\n            Certification\n          </a>\n          .\n        </p>\n      </Container>\n    </>\n  );\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAesourceRoot":""}