{"version":3,"file":"static/webpack/static/development/pages/project/caesars-cipher.js.9a6594e3c87ce3cce344.hot-update.js","sources":["webpack:///./components/algorithm-test.jsx"],"sourcesContent":["\"use strict\";\n\nimport React, { useState } from \"react\";\nimport { Form, InputGroup, Card } from \"react-bootstrap\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { githubGist } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\n\nexport default ({ algorithm, argumentName, inputType, inputPattern }) => {\n  const [argValue, setArgValue] = useState(null);\n\n  return (\n    <div className=\"mx-2 mx-sm-5 mb-3\">\n      <Form inline className=\"mb-3\">\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"functionName\">\n              {algorithm.name}(\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            type={inputType}\n            placeholder={argumentName}\n            aria-label={argumentName}\n            aria-describedby=\"functionName\"\n            onChange={e => {\n              setArgValue(e.target.value);\n            }}\n          />\n          <InputGroup.Append>\n            <InputGroup.Text>)</InputGroup.Text>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form>\n\n      <div className=\"d-flex align-items-center\">\n        <h5 className=\"mb-0 mr-3\">Returns:</h5>\n        <Card className=\"h5 mb-0\">\n          {argValue ? (\n            <SyntaxHighlighter\n              language=\"javascript\"\n              style={githubGist}\n              className=\"px-2 py-1 m-0\"\n            >\n              {typeof algorithm(argValue) === \"string\"\n                ? '\"' + algorithm(argValue) + '\"'\n                : algorithm(argValue).toString()}\n            </SyntaxHighlighter>\n          ) : (\n            <pre className=\"px-2 py-1 m-0\">&nbsp;</pre>\n          )}\n        </Card>\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;A","sourceRoot":""}